# Prefectures shapefile
prefecturesmappath <- "/Users/luis/Documents/research/jsps/ricemapping/data/gadm36_JPN_shp"
prefecturesmap <- "gadm36_JPN_1_noOKINAWA"
# Function to rescale ploting scale to midpoint=0
mid_rescaler <- function(mid = 0) {
function(x, to = c(0, 1), from = range(x, na.rm = TRUE)) {
scales::rescale_mid(x, to, from, mid)
}
}
theme_map <- function(...) {
theme_minimal() +
theme(
text = element_text(family = "Ubuntu Regular", color = "#22211d"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
# panel.grid.minor = element_line(color = "#ebebe5", size = 0.2),
panel.grid.major = element_line(color = "#ebebe5", size = 0.2),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
legend.background = element_rect(fill = "#f5f5f2", color = NA),
panel.border = element_blank(),
...
)
}
# 1. Read and process data table
# 1.1. Area change table
areachange <- read.csv(file=areachangepath, header =TRUE)
# Delete the X in column name (added because col name is a number)
names(areachange)[-1] <- c(1987,1992,1997,2002,2007,2012,2017)
# Transform table: use period as variable
areachange <- gather(areachange,period,area,-Prefecture)
areachange$period <- as.numeric(as.character(areachange$period))
# 1.2 Boundaries shapefiles
prefecturesbound <- readOGR(dsn=prefecturesmappath, layer=prefecturesmap)
# 2. Create linear models and extract all-time area changes
# Create columns with modelled area and percentage
prefs <- c(); inimodarea <- c(); iniupper <- c(); inilower <- c()
finalmodarea <- c(); finalupper <- c(); finallower <- c();
prefecturesmap <- "gadm36_JPN_1_noOKINAWA_simp"
# Function to rescale ploting scale to midpoint=0
mid_rescaler <- function(mid = 0) {
function(x, to = c(0, 1), from = range(x, na.rm = TRUE)) {
scales::rescale_mid(x, to, from, mid)
}
}
theme_map <- function(...) {
theme_minimal() +
theme(
text = element_text(family = "Ubuntu Regular", color = "#22211d"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
# panel.grid.minor = element_line(color = "#ebebe5", size = 0.2),
panel.grid.major = element_line(color = "#ebebe5", size = 0.2),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
legend.background = element_rect(fill = "#f5f5f2", color = NA),
panel.border = element_blank(),
...
)
}
# 1. Read and process data table
# 1.1. Area change table
areachange <- read.csv(file=areachangepath, header =TRUE)
# Delete the X in column name (added because col name is a number)
names(areachange)[-1] <- c(1987,1992,1997,2002,2007,2012,2017)
# Transform table: use period as variable
areachange <- gather(areachange,period,area,-Prefecture)
areachange$period <- as.numeric(as.character(areachange$period))
# 1.2 Boundaries shapefiles
prefecturesbound <- readOGR(dsn=prefecturesmappath, layer=prefecturesmap)
prefecturesmap <- "gadm36_JPN_1_noOkinawa_simp"
# Function to rescale ploting scale to midpoint=0
mid_rescaler <- function(mid = 0) {
function(x, to = c(0, 1), from = range(x, na.rm = TRUE)) {
scales::rescale_mid(x, to, from, mid)
}
}
theme_map <- function(...) {
theme_minimal() +
theme(
text = element_text(family = "Ubuntu Regular", color = "#22211d"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
# panel.grid.minor = element_line(color = "#ebebe5", size = 0.2),
panel.grid.major = element_line(color = "#ebebe5", size = 0.2),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
legend.background = element_rect(fill = "#f5f5f2", color = NA),
panel.border = element_blank(),
...
)
}
# 1. Read and process data table
# 1.1. Area change table
areachange <- read.csv(file=areachangepath, header =TRUE)
# Delete the X in column name (added because col name is a number)
names(areachange)[-1] <- c(1987,1992,1997,2002,2007,2012,2017)
# Transform table: use period as variable
areachange <- gather(areachange,period,area,-Prefecture)
areachange$period <- as.numeric(as.character(areachange$period))
# 1.2 Boundaries shapefiles
prefecturesbound <- readOGR(dsn=prefecturesmappath, layer=prefecturesmap)
finalmodarea <- c(); finalupper <- c(); finallower <- c();
# 2. Create linear models and extract all-time area changes
# Create columns with modelled area and percentage
prefs <- c(); inimodarea <- c(); iniupper <- c(); inilower <- c()
finalperc <- c(); finalmodperc <- c()
for(pref in unique(areachange$Prefecture)){
prefs <- append(prefs,pref)
df <- areachange[areachange$Prefecture==pref,]
mod<-lm(df$area~df$period)
# Calculate initial and final modeled area
pred <- predict(mod, newdata = data.frame(period=c(1987,2017)), interval = "prediction")
inimodarea <- append(inimodarea,pred[1,1]); finalmodarea <- append(finalmodarea,pred[7,1])
iniupper <- append(iniupper,pred[1,3]); finalupper <- append(finalupper,pred[7,3])
inilower <- append(inilower,pred[1,2]); finallower <- append(finallower,pred[7,2])
# Calculate modeled percentage change
finalmodperc <- append(finalmodperc, 100*((pred[1,1]-pred[7,1])/pred[1,1]))
# Calculate non-modeled percentage change
iniarea <- areachange[areachange$Prefecture==pref & areachange$period==1987,"area"]
finalarea <- areachange[areachange$Prefecture==pref & areachange$period==2017,"area"]
finalperc <- append(finalperc,100*((iniarea-finalarea)/iniarea))
# Plot change with linear model
# p1 <- ggplot(df, aes(x=period, y=area, group=1)) +
#   geom_line()+ geom_point()+ ylab("Area (km^2)")+ ggtitle(pref)+geom_smooth(method='lm')
# p1
# # Plot all metrics and save to eps
# postscript(paste(outdir,'areachangeprefecutreplots/',pref,'areachangewithlm.eps',sep=""),
#            height=4, width= 4)
# png(paste(outdir,'areachangeprefecutreplots/',pref,'areachangewithlm.png',sep=""),width = 800, height = 600)
# print(p1)
# dev.off()
}
percchangetable <- data.frame(prefs,inimodarea,inilower,iniupper,finalmodarea,finallower,finalupper,finalmodperc,finalperc)
# 3. Plot all-time percentage change map
names(prefecturesbound@data)[4] <- "prefs"
prefecturesbound@data <- merge(prefecturesbound@data, percchangetable[,c("prefs","finalperc","finalmodperc")], by = "prefs")
# Convert percentage in negative
prefecturesbound@data$finalperc <- prefecturesbound@data$finalperc*(-1)
prefecturesbound@data$finalmodperc <- prefecturesbound@data$finalmodperc*(-1)
prefecturesbound@data$id <- rownames(prefecturesbound@data)
prefecturesdata<- fortify(prefecturesbound, region = "id")
# Plot
ggplot(prefecturesdf, aes(x = long, y = lat, group = group, fill = finalperc)) +
geom_polygon(color = "black", size = 0.1) +
scale_fill_distiller(palette = "RdBu",trans = "reverse", breaks = c(-75,-60,-45,-30,-15,0,15,30),
rescaler = mid_rescaler()) +
coord_equal(xlim= c(129,146), ylim = c(30,45.7))+
#geom_text(aes(x=long,y=lat,label=round(finalperc)), size=4)+  # super slow
theme(panel.background = element_rect(fill = "#f5f5f2", color = NA),
#text = element_text(family = "Ubuntu Regular", color = "#22211d"),
axis.title = element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.grid.major = element_line(color = "#ebebe5", size = 0.2),
panel.grid.minor = element_blank(),
legend.position = c(0.2,0.7),
legend.background = element_rect(fill = "#f5f5f2", color = NA),)+
labs(title = "Changes in Japan's paddy field area from the 80's to present",
subtitle = "Paddy area decreased an average of 27.7% for the whole country") +
guides(fill=guide_legend(title="Area change (%)"),legend.position = c(0.1,0.5))+
ggsn::scalebar(prefecturesdf,location = "topleft", dist = 200, dist_unit = "km",st.size = 3,
transform=TRUE, model="WGS84", height=0.01, anchor = c(x=141,y=30.5))+
annotation_north_arrow(location = "tr",style = north_arrow_nautical,
height = unit(0.7, "cm"),width = unit(0.7, "cm"))
prefecturesdf <- merge(prefecturesdata, prefecturesbound@data,
by = "id")
areachange <- read.csv(file=areachangepath, header =TRUE)
names(areachange) <- c("prefs",1987,1992,1997,2002,2007,2012,2017)
prefecturesbound@data <- merge(prefecturesbound@data, areachange, by = "prefs")
# Save shapefile
writeOGR(prefecturesbound, dsn=outdir, "areachangeprefs_watermasked_shiny", driver="ESRI Shapefile")
# Plot
ggplot(prefecturesdf, aes(x = long, y = lat, group = group, fill = finalperc)) +
geom_polygon(color = "black", size = 0.1) +
scale_fill_distiller(palette = "RdBu",trans = "reverse", breaks = c(-75,-60,-45,-30,-15,0,15,30),
rescaler = mid_rescaler()) +
coord_equal(xlim= c(129,146), ylim = c(30,45.7))+
#geom_text(aes(x=long,y=lat,label=round(finalperc)), size=4)+  # super slow
theme(panel.background = element_rect(fill = "#f5f5f2", color = NA),
#text = element_text(family = "Ubuntu Regular", color = "#22211d"),
axis.title = element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.grid.major = element_line(color = "#ebebe5", size = 0.2),
panel.grid.minor = element_blank(),
legend.position = c(0.2,0.7),
legend.background = element_rect(fill = "#f5f5f2", color = NA),)+
labs(title = "Changes in Japan's paddy field area from the 80's to present",
subtitle = "Paddy area decreased an average of 27.7% for the whole country") +
guides(fill=guide_legend(title="Area change (%)"),legend.position = c(0.1,0.5))+
ggsn::scalebar(prefecturesdf,location = "topleft", dist = 200, dist_unit = "km",st.size = 3,
transform=TRUE, model="WGS84", height=0.01, anchor = c(x=141,y=30.5))+
annotation_north_arrow(location = "tr",style = north_arrow_nautical,
height = unit(0.7, "cm"),width = unit(0.7, "cm"))
# 2. Create linear models and extract all-time area changes
# Create columns with modelled area and percentage
prefs <- c(); inimodarea <- c(); iniupper <- c(); inilower <- c()
finalmodarea <- c(); finalupper <- c(); finallower <- c();
finalperc <- c(); finalmodperc <- c()
for(pref in unique(areachange$Prefecture)){
prefs <- append(prefs,pref)
df <- areachange[areachange$Prefecture==pref,]
mod<-lm(df$area~df$period)
# Calculate initial and final modeled area
pred <- predict(mod, newdata = data.frame(period=c(1987,2017)), interval = "prediction")
inimodarea <- append(inimodarea,pred[1,1]); finalmodarea <- append(finalmodarea,pred[7,1])
iniupper <- append(iniupper,pred[1,3]); finalupper <- append(finalupper,pred[7,3])
inilower <- append(inilower,pred[1,2]); finallower <- append(finallower,pred[7,2])
# Calculate modeled percentage change
finalmodperc <- append(finalmodperc, 100*((pred[1,1]-pred[7,1])/pred[1,1]))
# Calculate non-modeled percentage change
iniarea <- areachange[areachange$Prefecture==pref & areachange$period==1987,"area"]
finalarea <- areachange[areachange$Prefecture==pref & areachange$period==2017,"area"]
finalperc <- append(finalperc,100*((iniarea-finalarea)/iniarea))
# Plot change with linear model
# p1 <- ggplot(df, aes(x=period, y=area, group=1)) +
#   geom_line()+ geom_point()+ ylab("Area (km^2)")+ ggtitle(pref)+geom_smooth(method='lm')
# p1
# # Plot all metrics and save to eps
# postscript(paste(outdir,'areachangeprefecutreplots/',pref,'areachangewithlm.eps',sep=""),
#            height=4, width= 4)
# png(paste(outdir,'areachangeprefecutreplots/',pref,'areachangewithlm.png',sep=""),width = 800, height = 600)
# print(p1)
# dev.off()
}
percchangetable <- data.frame(prefs,inimodarea,inilower,iniupper,finalmodarea,finallower,finalupper,finalmodperc,finalperc)
# 2. Create linear models and extract all-time area changes
# Create columns with modelled area and percentage
prefs <- c(); inimodarea <- c(); iniupper <- c(); inilower <- c()
finalmodarea <- c(); finalupper <- c(); finallower <- c();
finalperc <- c(); finalmodperc <- c()
for(pref in unique(areachange$Prefecture)){
prefs <- append(prefs,pref)
df <- areachange[areachange$Prefecture==pref,]
mod<-lm(df$area~df$period)
# Calculate initial and final modeled area
pred <- predict(mod, newdata = data.frame(period=c(1987,2017)), interval = "prediction")
inimodarea <- append(inimodarea,pred[1,1]); finalmodarea <- append(finalmodarea,pred[7,1])
iniupper <- append(iniupper,pred[1,3]); finalupper <- append(finalupper,pred[7,3])
inilower <- append(inilower,pred[1,2]); finallower <- append(finallower,pred[7,2])
# Calculate modeled percentage change
finalmodperc <- append(finalmodperc, 100*((pred[1,1]-pred[7,1])/pred[1,1]))
# Calculate non-modeled percentage change
iniarea <- areachange[areachange$Prefecture==pref & areachange$period==1987,"area"]
finalarea <- areachange[areachange$Prefecture==pref & areachange$period==2017,"area"]
finalperc <- append(finalperc,100*((iniarea-finalarea)/iniarea))
# Plot change with linear model
p1 <- ggplot(df, aes(x=period, y=area, group=1)) +
geom_line()+ geom_point()+ ylab("Area (km^2)")+ ggtitle(pref)+geom_smooth(method='lm')
p1
# Plot all metrics and save to eps
postscript(paste(outdir,'areachangeprefecutreplots/',pref,'areachangewithlm.eps',sep=""),
height=4, width= 4)
png(paste(outdir,'areachangeprefecutreplots/',pref,'areachangewithlm.png',sep=""),width = 800, height = 600)
print(p1)
dev.off()
}
library(ggplot2)
library(patchwork)
library(Rmisc)
library(tidyr)
###########################################################################
# 0. INPUTS
# Input metrics table
areachangepath <- "/Users/luis/Documents/research/jsps/ricemapping/analysis/results/riceareabyprefecture_watermasked.csv"
# Output directory
outdir <- "/Users/luis/Documents/research/jsps/ricemapping/analysis/results/"
# 1. Read and process data table
# Area change table
areachange <- read.csv(file=areachangepath, header =TRUE)
# Delete the X in column name (added because col name is a number)
names(areachange)[-1] <- as.character(substring(names(areachange)[-1],2))
# Transform table: use period as variable
areachange <- gather(areachange,period,area,-Prefecture)
# Order period factors
areachange$period <- as.factor(areachange$period)
areachange$period <- ordered(areachange$period,
levels = c("8589","9094","9599","0004","0509","1014","1519"))
# 2. SIMPLE CHANGE PLOTS
# 2.1. All Japan
p1 <- ggplot(subset(areachange, Prefecture %in% "AllJapan"), aes(x=period, y=area, group=1)) +
geom_line()+ geom_point()+ ylab("Area (km^2)")
p1
# 2.2 Prefectures
for(pref in unique(areachange$Prefecture)){
p1 <- ggplot(subset(areachange, Prefecture %in% pref), aes(x=period, y=area, group=1)) +
geom_line()+ geom_point()+ ylab("Area (km^2)")+ ggtitle(pref)
# Plot all metrics and save to eps
postscript(paste(outdir,'areachangeprefecutreplots/',pref,'areachange.eps',sep=""),
height=4, width= 4)
print(p1)
dev.off()
}
library(ggplot2)
library(patchwork)
library(Rmisc)
library(tidyr)
###########################################################################
# 0. INPUTS
# Input metrics table
areachangepath <- "/Users/luis/Documents/research/jsps/ricemapping/analysis/results/riceareabyprefecture_watermasked.csv"
# Output directory
outdir <- "/Users/luis/Documents/research/jsps/ricemapping/analysis/results/"
# 1. Read and process data table
# Area change table
areachange <- read.csv(file=areachangepath, header =TRUE)
# Delete the X in column name (added because col name is a number)
names(areachange)[-1] <- as.character(substring(names(areachange)[-1],2))
# Transform table: use period as variable
areachange <- gather(areachange,period,area,-Prefecture)
# Order period factors
areachange$period <- as.factor(areachange$period)
areachange$period <- ordered(areachange$period,
levels = c("8589","9094","9599","0004","0509","1014","1519"))
# 2. SIMPLE CHANGE PLOTS
# 2.1. All Japan
p1 <- ggplot(subset(areachange, Prefecture %in% "AllJapan"), aes(x=period, y=area, group=1)) +
geom_line()+ geom_point()+ ylab("Area (km^2)")
p1
# 2.2 Prefectures
for(pref in unique(areachange$Prefecture)){
p1 <- ggplot(subset(areachange, Prefecture %in% pref), aes(x=period, y=area, group=1)) +
geom_line()+ geom_point()+ ylab("Area (km^2)")+ ggtitle(pref)
# Plot all metrics and save to eps
postscript(paste(outdir,'areachangeprefecutreplots/',pref,'areachange.eps',sep=""),
height=4, width= 4)
print(p1)
dev.off()
}
library(raster)
library(rgdal)
library(ggplot2)
library(dplyr)
library(RColorBrewer)
library(patchwork)
library(Rmisc)
library(tidyr)
library(ggsn)
library(ggspatial) # For map design
###########################################################################
# 0. INPUTS
# Input metrics table
areachangepath <- "/Users/luis/Documents/research/jsps/ricemapping/analysis/results/riceareabysubprefecture_watermasked.csv"
# Output directory
outdir <- "/Users/luis/Documents/research/jsps/ricemapping/analysis/results/"
# Prefectures shapefile
subprefecturesmappath <- "/Users/luis/Documents/research/jsps/ricemapping/data/gadm36_JPN_shp"
subprefecturesmap <- "gadm36_JPN_2_noOkinawa"
# Function to rescale ploting scale to midpoint=0
mid_rescaler <- function(mid = 0) {
function(x, to = c(0, 1), from = range(x, na.rm = TRUE)) {
scales::rescale_mid(x, to, from, mid)
}
}
theme_map <- function(...) {
theme_minimal() +
theme(
text = element_text(family = "Ubuntu Regular", color = "#22211d"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
# panel.grid.minor = element_line(color = "#ebebe5", size = 0.2),
panel.grid.major = element_line(color = "#ebebe5", size = 0.2),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
legend.background = element_rect(fill = "#f5f5f2", color = NA),
panel.border = element_blank(),
...
)
}
# 1. Read and process data table
# 1.1. Area change table
areachange <- read.csv(file=areachangepath, header =TRUE)
# Delete the X in column name (added because col name is a number)
names(areachange)[4:10] <- c(1987,1992,1997,2002,2007,2012,2017)
# Transform table: use period as variable
areachange <- gather(areachange,period,area,-Prefecture,-Subprefecture,-GID_2)
areachange$period <- as.numeric(as.character(areachange$period))
# 1.2 Boundaries shapefiles
subprefecturesbound <- readOGR(dsn=subprefecturesmappath, layer=subprefecturesmap)
subprefecturesmap <- "gadm36_JPN_2_noOkinawa_simp"
# Function to rescale ploting scale to midpoint=0
mid_rescaler <- function(mid = 0) {
function(x, to = c(0, 1), from = range(x, na.rm = TRUE)) {
scales::rescale_mid(x, to, from, mid)
}
}
theme_map <- function(...) {
theme_minimal() +
theme(
text = element_text(family = "Ubuntu Regular", color = "#22211d"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
# panel.grid.minor = element_line(color = "#ebebe5", size = 0.2),
panel.grid.major = element_line(color = "#ebebe5", size = 0.2),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "#f5f5f2", color = NA),
panel.background = element_rect(fill = "#f5f5f2", color = NA),
legend.background = element_rect(fill = "#f5f5f2", color = NA),
panel.border = element_blank(),
...
)
}
# 1. Read and process data table
# 1.1. Area change table
areachange <- read.csv(file=areachangepath, header =TRUE)
# Delete the X in column name (added because col name is a number)
names(areachange)[4:10] <- c(1987,1992,1997,2002,2007,2012,2017)
# Transform table: use period as variable
areachange <- gather(areachange,period,area,-Prefecture,-Subprefecture,-GID_2)
areachange$period <- as.numeric(as.character(areachange$period))
# 1.2 Boundaries shapefiles
subprefecturesbound <- readOGR(dsn=subprefecturesmappath, layer=subprefecturesmap)
# 2. Create linear models and extract all-time area changes
# Create columns with modelled area and percentage
subprefs <- c(); inimodarea <- c(); iniupper <- c(); inilower <- c()
finalmodarea <- c(); finalupper <- c(); finallower <- c();
finalperc <- c(); finalmodperc <- c()
# 2. Create linear models and extract all-time area changes
# Create columns with modelled area and percentage
subprefs <- c(); inimodarea <- c(); iniupper <- c(); inilower <- c()
finalmodarea <- c(); finalupper <- c(); finallower <- c();
finalperc <- c(); finalmodperc <- c()
for(subpref in unique(areachange$GID_2)){
subprefs <- append(subprefs,subpref)
df <- areachange[areachange$GID_2==subpref,]
mod<-lm(df$area~df$period)
# Calculate initial and final modeled area
pred <- predict(mod, newdata = data.frame(period=c(1987,2017)), interval = "prediction")
inimodarea <- append(inimodarea,pred[1,1]); finalmodarea <- append(finalmodarea,pred[7,1])
iniupper <- append(iniupper,pred[1,3]); finalupper <- append(finalupper,pred[7,3])
inilower <- append(inilower,pred[1,2]); finallower <- append(finallower,pred[7,2])
# Calculate modeled percentage change
finalmodperc <- append(finalmodperc, 100*((pred[1,1]-pred[7,1])/pred[1,1]))
# Calculate non-modeled percentage change
iniarea <- areachange[areachange$GID_2==subpref & areachange$period==1987,"area"]
finalarea <- areachange[areachange$GID_2==subpref & areachange$period==2017,"area"]
finalperc <- append(finalperc,100*((iniarea-finalarea)/iniarea))
# Plot change with linear model
p1 <- ggplot(df, aes(x=period, y=area, group=1)) +
geom_line()+ geom_point()+ ylab("Area (km^2)")+ ggtitle(subpref)+geom_smooth(method='lm')
p1
# Plot all metrics and save to eps
postscript(paste(outdir,'areachangeprefecutreplots/',subpref,'areachangewithlm.eps',sep=""),
height=4, width= 4)
png(paste(outdir,'areachangeprefecutreplots/',subpref,'areachangewithlm.png',sep=""),width = 800, height = 600)
print(p1)
dev.off()
}
percchangetable <- data.frame(subprefs,inimodarea,inilower,iniupper,finalmodarea,finallower,finalupper,finalmodperc,finalperc)
subprefecturesbound@data <- merge(subprefecturesbound@data, percchangetable, by = "GID_2")
subprefecturesbound@data$finalmodperc <- subprefecturesbound@data$finalmodperc*(-1)
subprefecturesbound@data$id <- rownames(subprefecturesbound@data)
subprefecturesdata <- fortify(subprefecturesbound, region = "id")
# Very high number so we set them to 100
index <- subprefecturesdf$finalperc > 100
subprefecturesdf$finalperc[index] <- 100
# 3. Plot all-time percentage change map
names(percchangetable)[1] <- "GID_2"
# Convert percentage in negative
subprefecturesbound@data$finalperc <- subprefecturesbound@data$finalperc*(-1)
subprefecturesdf <- merge(subprefecturesdata, subprefecturesbound@data,
by = "id")
# Plot
ggplot(subprefecturesdf, aes(x = long, y = lat, group = group, fill = finalperc)) +
geom_polygon(color = "black", size = 0.1) +
scale_fill_distiller(palette = "RdBu",trans = "reverse", breaks = c(-100,-75,-50,-25,0,25,50,75,100),
rescaler = mid_rescaler()) +
coord_equal(xlim= c(129,146), ylim = c(30,45.7))+
#geom_text(aes(x=long,y=lat,label=round(finalperc)), size=4)+  # super slow
theme(panel.background = element_rect(fill = "#f5f5f2", color = NA),
#text = element_text(family = "Ubuntu Regular", color = "#22211d"),
axis.title = element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
panel.grid.major = element_line(color = "#ebebe5", size = 0.2),
panel.grid.minor = element_blank(),
legend.position = c(0.2,0.7),
legend.background = element_rect(fill = "#f5f5f2", color = NA),)+
labs(title = "Changes in Japan's paddy field area from the 80's to present",
subtitle = "Paddy area decreased an average of 27.7% for the whole country") +
guides(fill=guide_legend(title="Area change (%)"),legend.position = c(0.1,0.3))+
ggsn::scalebar(prefecturesdf,location = "topleft", dist = 200, dist_unit = "km",st.size = 3,
transform=TRUE, model="WGS84", height=0.01, anchor = c(x=141,y=30.5))+
annotation_north_arrow(location = "tr",style = north_arrow_nautical,
height = unit(0.7, "cm"),width = unit(0.7, "cm"))
library(shiny); runApp('tanbomap_app.R')
library(shiny); runApp('tanbomap_app.R')
